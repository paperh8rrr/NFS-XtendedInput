/*
// clang-format off
// 
//    MIT License
//    Need for Speed (Black Box, MW & newer) - Xtended Input plugin
//    Bringing native XInput to NFS
//    
//    Copyright (c) 2022–2023 Lovro Plese (Xan/Tenjoin)
//    Copyright (c) 2023 Berkay Yigit <mail@berkay.link>
//
// clang-format on
*/

#ifndef XTENDEDINPUT_DEFINITIONS_H
#define XTENDEDINPUT_DEFINITIONS_H
#pragma once

#include "NFS_XtendedInput.h"

// unbuffered -- calls GetAsyncKeyState during scanning process itself -- probably more taxing, but very good input latency (default)
#define KB_READINGMODE_UNBUFFERED_ASYNC 0
// buffered -- calls GetKeyboardState right after reading joypads, updates VKeyStates
#define KB_READINGMODE_BUFFERED 1

#ifdef GAME_MW
#define NO_PROFILE_SETTINGS

#define GAMEFLOWMANAGER_STATUS_ADDR     0x00925E90
#define UTL_ILIST_CONSTRUCTOR_ADDR      0x005D8660
#define PLAYER_ILISTABLE_ADDR           0x0092D84C
#define PLAYER_GETHUD_VTABLE_OFFSET     0x20
#define FENGHUD_ISVISIBLE_VTABLE_OFFSET 0x18

#define CFENG_INSTANCE_ADDR           0x0091CADC
#define CFENG_FINDPACKAGE_ADDR        0x00516AF0
#define CFENG_ISPACKAGEINCONTROL_ADDR 0x00516B90

#define GAME_HWND_ADDR 0x00982BF4

#define FEMOUSECURSOR_ISHIDDEN_ADDR     0x0091CFB9
#define FEMOUSECURSOR_X_ADDR            0x00987F54
#define FEMOUSECURSOR_Y_ADDR            0x00987F58
#define FEMOUSECURSOR_BUTTONPRESS_ADDR  0x0091F1D4
#define FEMOUSECURSOR_BUTTONPRESS2_ADDR 0x0091F1D5
#define FEMOUSECURSOR_BUTTONPRESS3_ADDR 0x0091F1D6

#define FEMOUSECURSOR_BUTTON2PRESS_ADDR  0x0091F14C
#define FEMOUSECURSOR_BUTTON2PRESS2_ADDR 0x0091F14D
#define FEMOUSECURSOR_BUTTON2PRESS3_ADDR 0x0091F14E

#define FEMOUSECURSOR_BUTTON3PRESS_ADDR  0x0091F1DC
#define FEMOUSECURSOR_BUTTON3PRESS2_ADDR 0x0091F1DD
#define FEMOUSECURSOR_BUTTON3PRESS3_ADDR 0x0091F1DE

#define FEMOUSEWHEEL_ADDR 0x00987F6C

#define FEMOUSECURSOR_CARORBIT_X_ADDR 0x00987F64
#define FEMOUSECURSOR_CARORBIT_Y_ADDR 0x00987F68

#define FE_SENDKEY_ADDR 0x5A95F0

#define GLOBAL_FASTMEM_ADDR            0x00925B30
#define FASTMEM_ALLOC_ADDR             0x005D29D0
#define FASTMEM_INITLISTALLOCATOR_ADDR 0x00635060
#define FASTMEM_LISTALLOCATOR_ADDR     0x00635250
#define STL_LIST_ADD_ADDR              0x645F10

#define INIT_LIST_ALLOC_SIZE 0x24

#define WNDPROC_POINTER_ADDR 0x6E6AF1

#define CARGUYSCAMERA_ADDR 0x00926134

#define FENG_FINDOBJECT_ADDR   0x00524850
#define FENG_SETVISIBLE_ADDR   0x00514CC0
#define FENG_SETINVISIBLE_ADDR 0x00514C70
#define FENG_SETLANGHASH_ADDR  0x00515C00

#define CREATERESOURCEFILE_ADDR     0x0065FD30
#define RESFILE_BEGINLOADING_ADDR   0x006616F0
#define SERVICERESOURCELOADING_ADDR 0x006626B0

#define FE_MOUSEUPDATER_CALLBACK_ADDR    0x005B85F0
#define FE_MOUSEUPDATER_CALLBACK_VT_ADDR 0x008A2CBC
#define FEPRINTF_ADDRESS                 0x005253B0

#define FENG_HIDEPCOBJ_JMP_FROM     0x00516231
#define FENG_HIDEPCOBJ_JMP_TO       0x51625D
#define FENG_HIDEPCOBJ_VT_ADDR      0x0089B4A4
#define CFENG_RENDEROBJ_NOP_ADDR    0x005A45BD
#define CFENG_RENDEOBJ_NOP_AMOUNT   6
#define FENG_SETVISIBLE_NOP_ADDR    0x00514CCE
#define FENG_SHOWCASECAM_JMP_FROM   0x7A23C6
#define FENG_SHOWCASECAM_JMP_TO     0x7A23FF
#define WIN32_MOUSEHIDE_JMP_FROM    0x006E6CAC
#define WIN32_MOUSEHIDE_JMP_TO      0x6E6CBC
#define FEMOUSE_RENDER_JMP_FROM     0x0056FDC6
#define FEMOUSE_RENDER_JMP_TO       0x57055B
#define FEMOUSE_WHEEL_UPDATE_ADDR   0x006C9C88
#define REGISTERCLASSHOOK_CALL_ADDR 0x006E6B30
#define FEMOUSE_UPDATE_CALL_ADDR    0x006C9B60
#define DINPUT_KILL_ADDR            0x0063CC2B

#define INPUTMAPPING_CONSTRUCTOR_CALL_ADDR   0x00648116
#define INPUTDEVICE_FACTORY_INITIALIZER_ADDR 0x886B9D

#define FENGHUD_JOYHANDLER_JMP_FROM 0x0057C9F9
#define FENGHUD_JOYHANDLER_JMP_TO   0x0057C736

#define FE_SHOWCASE_FNG_NAME      "Showcase.fng"
#define WORLDMAPMAIN_FNG_NAMEHASH 0x2FB2E4D3

#define PRESS_START_HOOK_ADDR 0x005A3147

#define DEBUGWORLDCAMERAMOVER_UPDATE_VT_ADDR 0x00894E08
unsigned int DebugWorldCameraMover_Update_Addr = 0x0047E7B0;

#define DEBUGWORLDCAMERAMOVER_CAVE1_ENTRY    0x0047E98E
#define DEBUGWORLDCAMERAMOVER_CAVE1_EXIT     0x0047E9B9
#define DEBUGWORLDCAMERAMOVER_CAVE1_FULLEXIT 0x047EB1B

#define DEBUGWORLDCAMERAMOVER_CAVE2_ENTRY 0x0047EA01
#define DEBUGWORLDCAMERAMOVER_CAVE2_EXIT  0x0047EA0C

#define DEBUGWORLDCAMERAMOVER_CONSTRUCTOR_ADDR      0x00476440
#define DEBUGWORLDCAMERAMOVER_CONSTRUCTOR_HOOK_ADDR 0x004817E5

#define DEBUGWORLDCAMERAMOVER_DESTRUCTOR_ADDR      0x476590
#define DEBUGWORLDCAMERAMOVER_DESTRUCTOR_HOOK_ADDR 0x0047AEC3

#define DEBUGWORLDCAMERAMOVER_XSPEED_OFFSET 0x90
#define DEBUGWORLDCAMERAMOVER_YSPEED_OFFSET 0x92

#define DEBUGWORLDCAMERAMOVER_STACK_OFFSET  0x1C
#define DEBUGWORLDCAMERAMOVER_STACK_OFFSET2 0x1C

// REBINDABLE ACTIONS -- these will change textures based on bindings
// all FE action definitions will be changeable
// CROSS
#define FE_ACCEPT_TEX_HASH NFS_HASH("CROSS")
// TRIANGLE
#define FE_CANCEL_TEX_HASH NFS_HASH("TRIANGLE")
// SQUARE
#define FE_BUTTON4_TEX_HASH NFS_HASH("SQUARE")
// CIRCLE
#define FE_BUTTON5_TEX_HASH NFS_HASH("CIRCLE")
// L1
#define FE_LTRIGGER_TEX_HASH NFS_HASH("L1")
// R1
#define FE_RTRIGGER_TEX_HASH NFS_HASH("R1")
// SELECT
#define FE_SELECT_TEX_HASH NFS_HASH("SELECT")
// START
#define FE_START_TEX_HASH NFS_HASH("START")
// R2 ???? where is this used in FE?
// #define FE_BUTTON0_TEX_HASH NFS_HASH("R2")
// L2
#define FE_BUTTON1_TEX_HASH NFS_HASH("L2")
// R3
#define FE_BUTTON2_TEX_HASH NFS_HASH("R3")
// L3
#define FE_BUTTON3_TEX_HASH NFS_HASH("L3")
// all actions below here will only be changeable UNLESS stated otherwise
// RIGHT_ANALOG -- will only read FRONTENDACTION_RUP for its binding
#define FE_RANALOG_TEX_HASH NFS_HASH("RIGHT_ANALOG")
// RIGHT_ANALOG_UP -- will read GAMEACTION_SHIFTUP (but since it's based on PS2 this MIGHT have to be GAMEACTION_GAS)
#define FE_RANALOG_UP_TEX_HASH NFS_HASH("RIGHT_ANALOG_UP")
// RIGHT_ANALOG_UP_SWEDISH
#define FE_RANALOG_UP_SWEDISH_TEX_HASH NFS_HASH("RIGHT_ANALOG_UP_SWEDISH")
// RIGHT_ANALOG_UP_FRENCH
#define FE_RANALOG_UP_FRENCH_TEX_HASH NFS_HASH("RIGHT_ANALOG_UP_FRENCH")
// RIGHT_ANALOG_DOWN -- will read GAMEACTION_SHIFTDOWN (but since it's based on PS2 this MIGHT have to be GAMEACTION_BRAKE)
#define FE_RANALOG_DOWN_TEX_HASH NFS_HASH("RIGHT_ANALOG_DOWN")
// RIGHT_ANALOG_DOWN_SWEDISH
#define FE_RANALOG_DOWN_SWEDISH_TEX_HASH NFS_HASH("RIGHT_ANALOG_DOWN_SWEDISH")
// RIGHT_ANALOG_DOWN_FRENCH
#define FE_RANALOG_DOWN_FRENCH_TEX_HASH NFS_HASH("RIGHT_ANALOG_DOWN_FRENCH")
// LEFT_ANALOG
#define FE_LANALOG_TEX_HASH NFS_HASH("LEFT_ANALOG")
// LEFT_ANALOG_UP
#define FE_LANALOG_UP_TEX_HASH NFS_HASH("LEFT_ANALOG_UP")
// LEFT_ANALOG_UP_SWEDISH
#define FE_LANALOG_UP_SWEDISH_TEX_HASH NFS_HASH("LEFT_ANALOG_UP_SWEDISH")
// LEFT_ANALOG_UP_FRENCH
#define FE_LANALOG_UP_FRENCH_TEX_HASH NFS_HASH("LEFT_ANALOG_UP_FRENCH")
// LEFT_ANALOG_DOWN
#define FE_LANALOG_DOWN_TEX_HASH NFS_HASH("LEFT_ANALOG_DOWN")
// LEFT_ANALOG_DOWN_SWEDISH
#define FE_LANALOG_DOWN_SWEDISH_TEX_HASH NFS_HASH("LEFT_ANALOG_DOWN_SWEDISH")
// LEFT_ANALOG_DOWN_FRENCH
#define FE_LANALOG_DOWN_FRENCH_TEX_HASH NFS_HASH("LEFT_ANALOG_DOWN_FRENCH")
// DPAD -- will only read FRONTENDACTION_UP
#define FE_DPAD_TEX_HASH NFS_HASH("DPAD")
// DPAD_UPDOWN -- will only read FRONTENDACTION_UP
#define FE_DPAD_UPDOWN_TEX_HASH NFS_HASH("DPAD_UPDOWN")
// DPAD_LEFTRIGHT -- will only read FRONTENDACTION_LEFT
#define FE_DPAD_LEFTRIGHT_TEX_HASH NFS_HASH("DPAD_LEFTRIGHT")
// DPAD_UP -- will read FRONTENDACTION_UP
#define FE_DPAD_UP_TEX_HASH NFS_HASH("DPAD_UP")
// DPAD_DOWN -- will read FRONTENDACTION_DOWN
#define FE_DPAD_DOWN_TEX_HASH NFS_HASH("DPAD_DOWN")
// DPAD_LEFT -- will read FRONTENDACTION_LEFT
#define FE_DPAD_LEFT_TEX_HASH NFS_HASH("DPAD_LEFT")
// DPAD_RIGHT -- will read FRONTENDACTION_RIGHT
#define FE_DPAD_RIGHT_TEX_HASH NFS_HASH("DPAD_RIGHT")

enum FEButtonTex {
  FE_NULL_TEX,
  FE_ACCEPT_TEX,
  FE_CANCEL_TEX,
  FE_BUTTON4_TEX,
  FE_BUTTON5_TEX,
  FE_LTRIGGER_TEX,
  FE_RTRIGGER_TEX,
  FE_START_TEX,
  FE_SELECT_TEX,
  FE_BUTTON1_TEX,
  FE_BUTTON2_TEX,
  FE_BUTTON3_TEX,
  FE_RANALOG_TEX,
  FE_RANALOG_UP_TEX,
  FE_RANALOG_UP_SWEDISH_TEX,
  FE_RANALOG_UP_FRENCH_TEX,
  FE_RANALOG_DOWN_TEX,
  FE_RANALOG_DOWN_SWEDISH_TEX,
  FE_RANALOG_DOWN_FRENCH_TEX,
  FE_LANALOG_TEX,
  FE_LANALOG_UP_TEX,
  FE_LANALOG_UP_SWEDISH_TEX,
  FE_LANALOG_UP_FRENCH_TEX,
  FE_LANALOG_DOWN_TEX,
  FE_LANALOG_DOWN_SWEDISH_TEX,
  FE_LANALOG_DOWN_FRENCH_TEX,
  FE_DPAD_TEX,
  FE_DPAD_UPDOWN_TEX,
  FE_DPAD_LEFTRIGHT_TEX,
  FE_DPAD_UP_TEX,
  FE_DPAD_DOWN_TEX,
  FE_DPAD_LEFT_TEX,
  FE_DPAD_RIGHT_TEX,
  FE_TEX_HASH_COUNT
};

unsigned int FE_DefaultButtonTexHashes[FE_TEX_HASH_COUNT] = {0,
                                                             FE_ACCEPT_TEX_HASH,
                                                             FE_CANCEL_TEX_HASH,
                                                             FE_BUTTON4_TEX_HASH,
                                                             FE_BUTTON5_TEX_HASH,
                                                             FE_LTRIGGER_TEX_HASH,
                                                             FE_RTRIGGER_TEX_HASH,
                                                             FE_START_TEX_HASH,
                                                             FE_SELECT_TEX_HASH,
                                                             FE_BUTTON1_TEX_HASH,
                                                             FE_BUTTON2_TEX_HASH,
                                                             FE_BUTTON3_TEX_HASH,
                                                             FE_RANALOG_TEX_HASH,
                                                             FE_RANALOG_UP_TEX_HASH,
                                                             FE_RANALOG_UP_SWEDISH_TEX_HASH,
                                                             FE_RANALOG_UP_FRENCH_TEX_HASH,
                                                             FE_RANALOG_DOWN_TEX_HASH,
                                                             FE_RANALOG_DOWN_SWEDISH_TEX_HASH,
                                                             FE_RANALOG_DOWN_FRENCH_TEX_HASH,
                                                             FE_LANALOG_TEX_HASH,
                                                             FE_LANALOG_UP_TEX_HASH,
                                                             FE_LANALOG_UP_SWEDISH_TEX_HASH,
                                                             FE_LANALOG_UP_FRENCH_TEX_HASH,
                                                             FE_LANALOG_DOWN_TEX_HASH,
                                                             FE_LANALOG_DOWN_SWEDISH_TEX_HASH,
                                                             FE_LANALOG_DOWN_FRENCH_TEX_HASH,
                                                             FE_DPAD_TEX_HASH,
                                                             FE_DPAD_UPDOWN_TEX_HASH,
                                                             FE_DPAD_LEFTRIGHT_TEX_HASH,
                                                             FE_DPAD_UP_TEX_HASH,
                                                             FE_DPAD_DOWN_TEX_HASH,
                                                             FE_DPAD_LEFT_TEX_HASH,
                                                             FE_DPAD_RIGHT_TEX_HASH};

bool cFEng_IsPackageInControl_Fast(unsigned int pkg_name_hash);
int (*FEPrintf)(const char* pkg_name, void* FEObject, const char* format, ...) = (int (*)(const char*, void*, const char*, ...))FEPRINTF_ADDRESS;
void* (*FEngFindObject_Title)(char* pkg_name, unsigned int obj_hash)           = (void* (*)(char*, unsigned int))FENG_FINDOBJECT_ADDR;

#define WS_SPLASH_FNG_HASH 0x40E2717D
#define SPLASH_FNG_HASH    0xAFEF0EB4

char* SplashPkgName   = "MW_LS_Splash.fng";
char* WSSplashPkgName = "WS_MW_LS_Splash.fng";

int TitleScreenVisible() {
  if ((*(int*)GAMEFLOWMANAGER_STATUS_ADDR == 3)) {
    if (cFEng_IsPackageInControl_Fast(SPLASH_FNG_HASH)) return 1;
    if (cFEng_IsPackageInControl_Fast(WS_SPLASH_FNG_HASH)) return 2;
  }
  return 0;
}

void SetTitleScreenText() {
  int   title_screen_type = TitleScreenVisible();
  int   obj_hash          = 0xC6CC55A4;
  char* pkg_name          = SplashPkgName;
  char* splash_txt        = FE_SPLASH_TEXT_PC;

  if (title_screen_type) {
    if (title_screen_type == 2) {
      obj_hash = 0xC4DF3FF2;
      pkg_name = WSSplashPkgName;
    }

    if (bConsoleFEng) {
      switch (ControllerIconMode) {
        case CONTROLLERICON_PS3:
          splash_txt = FE_SPLASH_TEXT_PS3;
          break;
        case CONTROLLERICON_XB360MW:
        case CONTROLLERICON_XBOX360:
          splash_txt = FE_SPLASH_TEXT_XBOX360;
          break;
        case CONTROLLERICON_PS4:
          splash_txt = FE_SPLASH_TEXT_PS4;
          break;
        case CONTROLLERICON_SWITCH:
          splash_txt = FE_SPLASH_TEXT_SWITCH;
          break;
        case CONTROLLERICON_XBOXONE:
        default:
          splash_txt = FE_SPLASH_TEXT_XBOX;
          break;
      }
    }

    FEPrintf(pkg_name, FEngFindObject_Title(pkg_name, obj_hash), splash_txt);
  }
}
#endif

#ifdef GAME_CARBON
#define GAMEFLOWMANAGER_STATUS_ADDR     0x00A99BBC
#define UTL_ILIST_CONSTRUCTOR_ADDR      0x0060DC60
#define PLAYER_ILISTABLE_ADDR           0x00A9FF2C
#define PLAYER_GETHUD_VTABLE_OFFSET     0x20
#define FENGHUD_ISVISIBLE_VTABLE_OFFSET 0x1C

#define CFENG_INSTANCE_ADDR           0x00A97A78
#define CFENG_FINDPACKAGE_ADDR        0x005983F0
#define CFENG_ISPACKAGEINCONTROL_ADDR 0x00572350

#define GAME_HWND_ADDR 0x00AB0AD8

#define FEMOUSECURSOR_ISHIDDEN_ADDR     0x00A97B38
#define FEMOUSECURSOR_X_ADDR            0x00B1F638
#define FEMOUSECURSOR_Y_ADDR            0x00B1F63C
#define FEMOUSECURSOR_BUTTONPRESS_ADDR  0x00A986F0
#define FEMOUSECURSOR_BUTTONPRESS2_ADDR 0x00A986F1
#define FEMOUSECURSOR_BUTTONPRESS3_ADDR 0x00A986F2

#define FEMOUSECURSOR_BUTTON2PRESS_ADDR  0x00A986CC
#define FEMOUSECURSOR_BUTTON2PRESS2_ADDR 0x00A986CD
#define FEMOUSECURSOR_BUTTON2PRESS3_ADDR 0x00A986CE

#define FEMOUSECURSOR_BUTTON3PRESS_ADDR  0x00A986F8
#define FEMOUSECURSOR_BUTTON3PRESS2_ADDR 0x00A986F9
#define FEMOUSECURSOR_BUTTON3PRESS3_ADDR 0x00A986FA

#define FEMOUSEWHEEL_ADDR 0x00B1F650

#define FEMOUSECURSOR_CARORBIT_X_ADDR 0x00B1F648
#define FEMOUSECURSOR_CARORBIT_Y_ADDR 0x00B1F64C

#define SHOWCURSOR_HOOK_ADDR1 0x00711EE2
#define SHOWCURSOR_HOOK_ADDR2 0x00711EF3

#define FE_SENDKEY_ADDR 0x00711F70

#define GLOBAL_FASTMEM_ADDR  0x00A99720
#define FASTMEM_ALLOC_ADDR   0x0060BA70
#define INIT_LIST_ALLOC_SIZE 0x28

#define WNDPROC_POINTER_ADDR 0x730941

#define CARGUYSCAMERA_ADDR     0x00A9E6C8
#define FE_ANALOGZOOM_JMP_FROM 0x0084FBDA
#define FE_ANALOGZOOM_JMP_TO   0x0084FBE2

#define FENG_FINDOBJECT_ADDR 0x005A0250
// Carbon and Pro Street use a bit of a different FE logic...
#define FENG_SETOBJECTVISIBILITY_ADDR 0x00570460
#define FENG_SETLANGHASH_ADDR         0x005A0830

#define FEPACKAGE_FORALLOBJ_ADDR                0x005EC910
#define FEPACKAGE_FINDOBJBYHASH_ADDR            0x005F3760
#define FENGINE_PROCESSPADSFORPACKAGE_ADDR      0x005FD770
#define FENGINE_PROCESSPADSFORPACKAGE_CALL_ADDR 0x00600D5C
#define CFENG_SERVICE_ADDR                      0x00600C90
#define CFENG_SERVICE_CALL_ADDR                 0x005BB5B5
#define FE_STRING_PRINTF_ADDRESS                0x005910E0

#define CREATERESOURCEFILE_ADDR     0x006B32C0
#define RESFILE_BEGINLOADING_ADDR   0x006B5910
#define SERVICERESOURCELOADING_ADDR 0x006B68D0

#define FE_MOUSEUPDATER_CALLBACK_ADDR    0x005F7D90
#define FE_MOUSEUPDATER_CALLBACK_VT_ADDR 0x009D7538

#define FENG_HIDEPCOBJ_JMP_FROM             0x00583D70
#define FENG_HIDEPCOBJ_JMP_TO               0x00583D99
#define FENG_HIDEPCOBJ_VT_ADDR              0x009D0680
#define CFENG_RENDEROBJ_NOP_ADDR            0x005B092D
#define CFENG_RENDEROBJ_FLAG_ADDR           0x005B0929
#define CFENG_RENDEOBJ_NOP_AMOUNT           2
#define FENG_SHOWCASECAM_JMP_FROM           0x0084FAE3
#define FENG_SHOWCASECAM_JMP_TO             0x0084FB0C
#define WIN32_MOUSEHIDE_JMP_FROM            0x00730A93
#define WIN32_MOUSEHIDE_JMP_TO              0x00730AA3
#define FEMOUSE_RENDER_JMP_FROM             0x005852AB
#define FEMOUSE_RENDER_JMP_TO               0x0058547B
#define FEMOUSE_WHEEL_UPDATE_ADDR           0x007316A8
#define REGISTERCLASSHOOK_CALL_ADDR         0x00730980
#define FEMOUSE_UPDATE_CALL_ADDR            0x00731580
#define FEWORLDMAPSTATEMANAGER_TICK_VT_ADDR 0x009D2F14
#define FEWORLDMAPSTATEMANAGER_TICK_ADDR    0x005CAED0
#define WORLDMAP_UNFOCUSQUICKLIST_ADDR      0x005C3880
#define WORLDMAP_SETQUICKLISTINFOCUS_ADDR   0x005CDBF0
#define DINPUT_KILL_ADDR                    0x006892EB

#define DEADZONE_FLOAT_POINTER_ADDR 0x696071
#define SMALL_FLOAT_ADDR            0x9C1760
#define FE_DEADZONE_POINTER_ADDR    0x59FF6E

#define INPUTMAPPING_CONSTRUCTOR_CALL_ADDR   0x00696A74
#define INPUTDEVICE_FACTORY_INITIALIZER_ADDR 0x9B629D

#define FENGHUD_JOYHANDLER_JMP_FROM 0x005D512D
#define FENGHUD_JOYHANDLER_JMP_TO   0x005D4F85

#define GETLOCALIZEDSTRING_ADDR 0x00578830

#define FE_SHOWCASE_FNG_NAME           "FePhotoMode.fng"
#define WORLDMAPMAIN_FNG_NAMEHASH      NFS_HASH("WorldMapMain.fng")
#define WORLDMAPQUICKLIST_FNG_NAMEHASH NFS_HASH("FeWorldMapQuickList.fng")
#define WORLDMAPWORLDVIEW_FNG_NAMEHASH NFS_HASH("Fe_WorldMap_World_View.fng")
#define WORLDMAP_INSTANCE_ADDR         0xA977F0
#define WORLDMAP_BUTTONGROUP_CONSOLE   0x17B1F254
#define WORLDMAP_BUTTONGROUP_PC        0xA2601D59

#define SELECTCAR_SETHROTATESPEED_ADDR   0x00488F70
#define SELECTCAR_SETVROTATESPEED_ADDR   0x00488F40
#define SELECTCAR_SETZOOMSPEED_ADDR      0x00488FA0
#define FEGARAGEMAIN_ZOOMCAMERAVIEW_ADDR 0x0083EEF0
#define SELECTCAROBJ_OFFSET              0x28

#define PRESS_START_HOOK_ADDR 0x008577B6

#define FEPHOTOMODE_HANDLESCREENTICK_HOOK_ADDR 0x0057BB69
#define FEPHOTOMODE_HANDLELTRIGGER_HOOK_ADDR   0x009D306C
#define FEPHOTOMODE_HANDLERTRIGGER_HOOK_ADDR   0x009D308C

#define DEBUGWORLDCAMERAMOVER_UPDATE_VT_ADDR 0x009C7A10
unsigned int DebugWorldCameraMover_Update_Addr = 0x004932A0;

#define DEBUGWORLDCAMERAMOVER_CAVE1_ENTRY    0x004934AD
#define DEBUGWORLDCAMERAMOVER_CAVE1_EXIT     0x004934D8
#define DEBUGWORLDCAMERAMOVER_CAVE1_FULLEXIT 0x49363A

#define DEBUGWORLDCAMERAMOVER_CAVE2_ENTRY 0x00493520
#define DEBUGWORLDCAMERAMOVER_CAVE2_EXIT  0x0049352B

#define DEBUGWORLDCAMERAMOVER_CONSTRUCTOR_ADDR      0x00488670
#define DEBUGWORLDCAMERAMOVER_CONSTRUCTOR_HOOK_ADDR 0x00495D46

#define DEBUGWORLDCAMERAMOVER_DESTRUCTOR_ADDR      0x004887C0
#define DEBUGWORLDCAMERAMOVER_DESTRUCTOR_HOOK_ADDR 0x0048F353

#define DEBUGWORLDCAMERAMOVER_XSPEED_OFFSET 0xA0
#define DEBUGWORLDCAMERAMOVER_YSPEED_OFFSET 0xA2

#define DEBUGWORLDCAMERAMOVER_STACK_OFFSET  0x1C
#define DEBUGWORLDCAMERAMOVER_STACK_OFFSET2 0x1C

// REBINDABLE ACTIONS -- these will change textures based on bindings
// all FE action definitions will be changeable
// CROSS
#define FE_ACCEPT_TEX_HASH NFS_HASH("CROSS")
// TRIANGLE
#define FE_CANCEL_TEX_HASH NFS_HASH("TRIANGLE")
// SQUARE
#define FE_BUTTON4_TEX_HASH NFS_HASH("SQUARE")
// CIRCLE
#define FE_BUTTON5_TEX_HASH NFS_HASH("CIRCLE")
// L1
#define FE_LTRIGGER_TEX_HASH NFS_HASH("L1")
// R1
#define FE_RTRIGGER_TEX_HASH NFS_HASH("R1")
// SELECT
#define FE_SELECT_TEX_HASH NFS_HASH("SELECT")
// START
#define FE_START_TEX_HASH NFS_HASH("START")
// R2 -- used as LB in Carbon...
#define FE_BUTTON0_TEX_HASH NFS_HASH("R2")
// L2
#define FE_BUTTON1_TEX_HASH NFS_HASH("L2")
// R3
#define FE_BUTTON2_TEX_HASH NFS_HASH("R3")
// L3
#define FE_BUTTON3_TEX_HASH NFS_HASH("L3")
// all actions below here will only be changeable UNLESS stated otherwise
// RIGHT_ANALOG -- will only read FRONTENDACTION_RUP for its binding
#define FE_RANALOG_TEX_HASH NFS_HASH("RIGHT_ANALOG")
// RIGHT_ANALOG_UP -- will read GAMEACTION_SHIFTUP (but since it's based on PS2 this MIGHT have to be GAMEACTION_GAS)
#define FE_RANALOG_UP_TEX_HASH NFS_HASH("RIGHT_ANALOG_UP")
// RIGHT_ANALOG_UP_SWEDISH
#define FE_RANALOG_UP_SWEDISH_TEX_HASH NFS_HASH("RIGHT_ANALOG_UP_SWEDISH")
// RIGHT_ANALOG_UP_FRENCH
#define FE_RANALOG_UP_FRENCH_TEX_HASH NFS_HASH("RIGHT_ANALOG_UP_FRENCH")
// RIGHT_ANALOG_DOWN -- will read GAMEACTION_SHIFTDOWN (but since it's based on PS2 this MIGHT have to be GAMEACTION_BRAKE)
#define FE_RANALOG_DOWN_TEX_HASH NFS_HASH("RIGHT_ANALOG_DOWN")
// RIGHT_ANALOG_DOWN_SWEDISH
#define FE_RANALOG_DOWN_SWEDISH_TEX_HASH NFS_HASH("RIGHT_ANALOG_DOWN_SWEDISH")
// RIGHT_ANALOG_DOWN_FRENCH
#define FE_RANALOG_DOWN_FRENCH_TEX_HASH NFS_HASH("RIGHT_ANALOG_DOWN_FRENCH")
// LEFT_ANALOG
#define FE_LANALOG_TEX_HASH NFS_HASH("LEFT_ANALOG")
// LEFT_ANALOG_UP
#define FE_LANALOG_UP_TEX_HASH NFS_HASH("LEFT_ANALOG_UP")
// LEFT_ANALOG_UP_SWEDISH
#define FE_LANALOG_UP_SWEDISH_TEX_HASH NFS_HASH("LEFT_ANALOG_UP_SWEDISH")
// LEFT_ANALOG_UP_FRENCH
#define FE_LANALOG_UP_FRENCH_TEX_HASH NFS_HASH("LEFT_ANALOG_UP_FRENCH")
// LEFT_ANALOG_DOWN
#define FE_LANALOG_DOWN_TEX_HASH NFS_HASH("LEFT_ANALOG_DOWN")
// LEFT_ANALOG_DOWN_SWEDISH
#define FE_LANALOG_DOWN_SWEDISH_TEX_HASH NFS_HASH("LEFT_ANALOG_DOWN_SWEDISH")
// LEFT_ANALOG_DOWN_FRENCH
#define FE_LANALOG_DOWN_FRENCH_TEX_HASH NFS_HASH("LEFT_ANALOG_DOWN_FRENCH")
// DPAD -- will only read FRONTENDACTION_UP
#define FE_DPAD_TEX_HASH NFS_HASH("DPAD")
// DPAD_UPDOWN -- will only read FRONTENDACTION_UP
#define FE_DPAD_UPDOWN_TEX_HASH NFS_HASH("DPAD_UPDOWN")
// DPAD_LEFTRIGHT -- will only read FRONTENDACTION_LEFT
#define FE_DPAD_LEFTRIGHT_TEX_HASH NFS_HASH("DPAD_LEFTRIGHT")
// DPAD_UP -- will read FRONTENDACTION_UP
#define FE_DPAD_UP_TEX_HASH NFS_HASH("DPAD_UP")
// DPAD_DOWN -- will read FRONTENDACTION_DOWN
#define FE_DPAD_DOWN_TEX_HASH NFS_HASH("DPAD_DOWN")
// DPAD_LEFT -- will read FRONTENDACTION_LEFT
#define FE_DPAD_LEFT_TEX_HASH NFS_HASH("DPAD_LEFT")
// DPAD_RIGHT -- will read FRONTENDACTION_RIGHT
#define FE_DPAD_RIGHT_TEX_HASH NFS_HASH("DPAD_RIGHT")

enum FEButtonTex {
  FE_NULL_TEX,
  FE_ACCEPT_TEX,
  FE_CANCEL_TEX,
  FE_BUTTON4_TEX,
  FE_BUTTON5_TEX,
  FE_LTRIGGER_TEX,
  FE_RTRIGGER_TEX,
  FE_BUTTON0_TEX,
  FE_START_TEX,
  FE_SELECT_TEX,
  FE_BUTTON1_TEX,
  FE_BUTTON2_TEX,
  FE_BUTTON3_TEX,
  FE_RANALOG_TEX,
  FE_RANALOG_UP_TEX,
  FE_RANALOG_UP_SWEDISH_TEX,
  FE_RANALOG_UP_FRENCH_TEX,
  FE_RANALOG_DOWN_TEX,
  FE_RANALOG_DOWN_SWEDISH_TEX,
  FE_RANALOG_DOWN_FRENCH_TEX,
  FE_LANALOG_TEX,
  FE_LANALOG_UP_TEX,
  FE_LANALOG_UP_SWEDISH_TEX,
  FE_LANALOG_UP_FRENCH_TEX,
  FE_LANALOG_DOWN_TEX,
  FE_LANALOG_DOWN_SWEDISH_TEX,
  FE_LANALOG_DOWN_FRENCH_TEX,
  FE_DPAD_TEX,
  FE_DPAD_UPDOWN_TEX,
  FE_DPAD_LEFTRIGHT_TEX,
  FE_DPAD_UP_TEX,
  FE_DPAD_DOWN_TEX,
  FE_DPAD_LEFT_TEX,
  FE_DPAD_RIGHT_TEX,
  FE_TEX_HASH_COUNT
};

unsigned int FE_DefaultButtonTexHashes[FE_TEX_HASH_COUNT] = {
    0,
    FE_ACCEPT_TEX_HASH,
    FE_CANCEL_TEX_HASH,
    FE_BUTTON4_TEX_HASH,
    FE_BUTTON5_TEX_HASH,
    FE_LTRIGGER_TEX_HASH,
    FE_RTRIGGER_TEX_HASH,
    FE_BUTTON0_TEX_HASH,
    FE_START_TEX_HASH,
    FE_SELECT_TEX_HASH,
    FE_BUTTON1_TEX_HASH,
    FE_BUTTON2_TEX_HASH,
    FE_BUTTON3_TEX_HASH,
    FE_RANALOG_TEX_HASH,
    FE_RANALOG_UP_TEX_HASH,
    FE_RANALOG_UP_SWEDISH_TEX_HASH,
    FE_RANALOG_UP_FRENCH_TEX_HASH,
    FE_RANALOG_DOWN_TEX_HASH,
    FE_RANALOG_DOWN_SWEDISH_TEX_HASH,
    FE_RANALOG_DOWN_FRENCH_TEX_HASH,
    FE_LANALOG_TEX_HASH,
    FE_LANALOG_UP_TEX_HASH,
    FE_LANALOG_UP_SWEDISH_TEX_HASH,
    FE_LANALOG_UP_FRENCH_TEX_HASH,
    FE_LANALOG_DOWN_TEX_HASH,
    FE_LANALOG_DOWN_SWEDISH_TEX_HASH,
    FE_LANALOG_DOWN_FRENCH_TEX_HASH,
    FE_DPAD_TEX_HASH,
    FE_DPAD_UPDOWN_TEX_HASH,
    FE_DPAD_LEFTRIGHT_TEX_HASH,
    FE_DPAD_UP_TEX_HASH,
    FE_DPAD_DOWN_TEX_HASH,
    FE_DPAD_LEFT_TEX_HASH,
    FE_DPAD_RIGHT_TEX_HASH,
};

bool cFEng_IsPackageInControl_Fast(unsigned int pkg_name_hash);
int (*FE_String_Printf)(void* FEObject, const char* fmt, ...)        = (int (*)(void*, const char*, ...))FE_STRING_PRINTF_ADDRESS;
void* (*FEngFindObject_Title)(char* pkg_name, unsigned int obj_hash) = (void* (*)(char*, unsigned int))FENG_FINDOBJECT_ADDR;

char* SplashPkgName = "DEMO_SPLASH.fng";

void SetTitleScreenText() {
  int   obj_hash   = 0xC4DF3FF2;
  char* pkg_name   = SplashPkgName;
  char* splash_txt = FE_SPLASH_TEXT_PC;

  if (bConsoleFEng) {
    switch (ControllerIconMode) {
      case CONTROLLERICON_PS3:
        splash_txt = FE_SPLASH_TEXT_PS3;
        break;
      case CONTROLLERICON_XB360MW:
      case CONTROLLERICON_XBOX360:
        splash_txt = FE_SPLASH_TEXT_XBOX360;
        break;
      case CONTROLLERICON_PS4:
        splash_txt = FE_SPLASH_TEXT_PS4;
        break;
      case CONTROLLERICON_SWITCH:
        splash_txt = FE_SPLASH_TEXT_SWITCH;
        break;
      case CONTROLLERICON_XBOXONE:
      default:
        splash_txt = FE_SPLASH_TEXT_XBOX;
        break;
    }
  }

  FE_String_Printf(FEngFindObject_Title(pkg_name, obj_hash), splash_txt);
}

void (*InitProfileSettings)() = (void (*)())0x00679BF0;
#endif

#ifdef GAME_PROSTREET
#define NO_QUIT_BUTTON
#define GAMEFLOWMANAGER_STATUS_ADDR     0x00ABB510
#define UTL_ILIST_CONSTRUCTOR_ADDR      0x004613C0
#define PLAYER_ILISTABLE_ADDR           0x00ACE444
#define PLAYER_GETHUD_VTABLE_OFFSET     0x20
#define FENGHUD_ISVISIBLE_VTABLE_OFFSET 0x1C

#define CFENG_INSTANCE_ADDR           0x00AB27D8
#define CFENG_FINDPACKAGE_ADDR        0x005B4D00
#define CFENG_ISPACKAGEINCONTROL_ADDR 0x0058EDD0

#define GAME_HWND_ADDR 0x00AC6ED8

#define FEMOUSECURSOR_ISHIDDEN_ADDR     0x00AB286D
#define FEMOUSECURSOR_X_ADDR            0x00ACDD2C
#define FEMOUSECURSOR_Y_ADDR            0x00ACDD30
#define FEMOUSECURSOR_BUTTONPRESS_ADDR  0x00ABA300
#define FEMOUSECURSOR_BUTTONPRESS2_ADDR 0x00ABA301
#define FEMOUSECURSOR_BUTTONPRESS3_ADDR 0x00ABA302

#define FEMOUSECURSOR_BUTTON2PRESS_ADDR  0x00ABA2DC
#define FEMOUSECURSOR_BUTTON2PRESS2_ADDR 0x00ABA2DD
#define FEMOUSECURSOR_BUTTON2PRESS3_ADDR 0x00ABA2DE

#define FEMOUSECURSOR_BUTTON3PRESS_ADDR  0x00ABA308
#define FEMOUSECURSOR_BUTTON3PRESS2_ADDR 0x00ABA309
#define FEMOUSECURSOR_BUTTON3PRESS3_ADDR 0x00ABA30A

#define FEMOUSEWHEEL_ADDR 0x00ACDD44

#define FEMOUSECURSOR_CARORBIT_X_ADDR 0x00ACDD3C
#define FEMOUSECURSOR_CARORBIT_Y_ADDR 0x00ACDD40

#define SHOWCURSOR_HOOK_ADDR1 0x007012B5
#define SHOWCURSOR_HOOK_ADDR2 0x007012C7

#define ONLOADDONE_FUNC_VTABLE_ADDR 0x00974444

#define GLOBAL_FASTMEM_ADDR  0x00ABB060
#define FASTMEM_ALLOC_ADDR   0x00463E90
#define INIT_LIST_ALLOC_SIZE 0x28

#define WNDPROC_POINTER_ADDR 0x70E2B4

#define FE_ANALOGZOOM_JMP_FROM 0x007D9C55
#define FE_ANALOGZOOM_JMP_TO   0x007D9C5D

#define CARGUYSCAMERA_ADDR 0x00BFBC6F

#define FENG_FINDOBJECT_ADDR          0x005BD520
#define FENG_SETOBJECTVISIBILITY_ADDR 0x0058DBE0

#define FEPACKAGE_FORALLOBJ_ADDR                0x00625070
#define FEPACKAGE_FINDOBJBYHASH_ADDR            0x00629140
#define FENGINE_PROCESSPADSFORPACKAGE_ADDR      0x0062F920
#define FENGINE_PROCESSPADSFORPACKAGE_CALL_ADDR 0x0063296C

#define CFENG_SERVICE_ADDR       0x006328A0
#define CFENG_SERVICE_CALL_ADDR  0x005EEEAB
#define FE_STRING_PRINTF_ADDRESS 0x005CE430

#define CREATERESOURCEFILE_ADDR     0x006D6DE0
#define RESFILE_BEGINLOADING_ADDR   0x006D9430
#define SERVICERESOURCELOADING_ADDR 0x006D9E70

#define FENG_HIDEPCOBJ_VT_ADDR 0x00973948

#define CFENG_RENDEROBJ_NOP_ADDR    0x005D216D
#define CFENG_RENDEROBJ_NOP2_ADDR   0x005D2179
#define CFENG_RENDEOBJ_NOP_AMOUNT   6
#define CFENG_RENDEROBJ_FLAG_ADDR   0x005D2169
#define FENG_SHOWCASECAM_JMP_FROM   0x007D9B37
#define FENG_SHOWCASECAM_JMP_TO     0x007D9B60
#define WIN32_MOUSEHIDE_JMP_FROM    0x0070E3FD
#define WIN32_MOUSEHIDE_JMP_TO      0x0070E40D
#define FEMOUSE_RENDER_JMP_FROM     0x005A0B66
#define FEMOUSE_RENDER_JMP_TO       0x005A0CFA
#define FEMOUSE_WHEEL_UPDATE_ADDR   0x0070E688
#define REGISTERCLASSHOOK_CALL_ADDR 0x0070E2F3
#define FEMOUSE_UPDATE_CALL_ADDR    0x0070E560
#define DINPUT_KILL_ADDR            0x006B6B91

#define DEADZONE_FLOAT_POINTER_ADDR 0x6C9767
#define SMALL_FLOAT_ADDR            0x0096B090
#define FE_DEADZONE_POINTER_ADDR    0x5BD25D

#define INPUTMAPPING_CONSTRUCTOR_CALL_ADDR   0x006CA180
#define INPUTDEVICE_FACTORY_INITIALIZER_ADDR 0x95B22D

#define FENGHUD_JOYHANDLER_JMP_FROM 0x00612D0F
#define FENGHUD_JOYHANDLER_JMP_TO   0x00612A2C

#define GETLOCALIZEDSTRING_ADDR 0x005B8410

#define FE_SHOWCASE_FNG_NAME             "FePhotoMode.fng"
#define SELECTCAR_SETHROTATESPEED_ADDR   0x00647010
#define SELECTCAR_SETVROTATESPEED_ADDR   0x00646FE0
#define SELECTCAR_SETZOOMSPEED_ADDR      0x00647040
#define FEGARAGEMAIN_ZOOMCAMERAVIEW_ADDR 0x007CB7C0
#define SELECTCAROBJ_OFFSET              0xD0

#define FEPHOTOMODE_HANDLESCREENTICK_HOOK_ADDR 0x005A791C
#define FEPHOTOMODE_HANDLELTRIGGER_HOOK_ADDR   0x00977E5C
#define FEPHOTOMODE_HANDLERTRIGGER_HOOK_ADDR   0x00977E7C

#define PRESS_START_HOOK_ADDR 0x007E2CA0

#define DEBUGWORLDCAMERAMOVER_UPDATE_VT_ADDR 0x009817BC
unsigned int DebugWorldCameraMover_Update_Addr = 0x00651BA0;

#define DEBUGWORLDCAMERAMOVER_CAVE1_ENTRY    0x00651DFA
#define DEBUGWORLDCAMERAMOVER_CAVE1_EXIT     0x00651E27
#define DEBUGWORLDCAMERAMOVER_CAVE1_FULLEXIT 0x652052

#define DEBUGWORLDCAMERAMOVER_CAVE2_ENTRY 0x00651E9C
#define DEBUGWORLDCAMERAMOVER_CAVE2_EXIT  0x00651EA7

#define DEBUGWORLDCAMERAMOVER_CONSTRUCTOR_ADDR      0x00646640
#define DEBUGWORLDCAMERAMOVER_CONSTRUCTOR_HOOK_ADDR 0x0064F212

#define DEBUGWORLDCAMERAMOVER_DESTRUCTOR_ADDR      0x6467A0
#define DEBUGWORLDCAMERAMOVER_DESTRUCTOR_HOOK_ADDR 0x0064CC83

#define DEBUGWORLDCAMERAMOVER_XSPEED_OFFSET 0xA0
#define DEBUGWORLDCAMERAMOVER_YSPEED_OFFSET 0xA2

#define DEBUGWORLDCAMERAMOVER_STACK_OFFSET  0x18
#define DEBUGWORLDCAMERAMOVER_STACK_OFFSET2 0x1C

#define DEBUGWORLDCAMERAMOVER_FSTP

// REBINDABLE ACTIONS -- these will change textures based on bindings
// all FE action definitions will be changeable
// CROSS
#define FE_ACCEPT_TEX_HASH NFS_HASH("CROSS")
// TRIANGLE
#define FE_CANCEL_TEX_HASH NFS_HASH("TRIANGLE")
// SQUARE
#define FE_BUTTON4_TEX_HASH NFS_HASH("SQUARE")
// CIRCLE
#define FE_BUTTON5_TEX_HASH NFS_HASH("CIRCLE")
// L1
#define FE_LTRIGGER_TEX_HASH NFS_HASH("L1")
// R1
#define FE_RTRIGGER_TEX_HASH NFS_HASH("R1")
// SELECT
#define FE_SELECT_TEX_HASH NFS_HASH("SELECT")
// START
#define FE_START_TEX_HASH NFS_HASH("START")
// R2 -- used as LB in Carbon...
#define FE_BUTTON0_TEX_HASH NFS_HASH("R2")
// L2
#define FE_BUTTON1_TEX_HASH NFS_HASH("L2")
// R3
#define FE_BUTTON2_TEX_HASH NFS_HASH("R3")
// L3
#define FE_BUTTON3_TEX_HASH NFS_HASH("L3")
// all actions below here will only be changeable UNLESS stated otherwise
// RIGHT_ANALOG -- will only read FRONTENDACTION_RUP for its binding
#define FE_RANALOG_TEX_HASH NFS_HASH("RIGHT_ANALOG")
// RIGHT_ANALOG_UP -- will read GAMEACTION_SHIFTUP (but since it's based on PS2 this MIGHT have to be GAMEACTION_GAS)
#define FE_RANALOG_UP_TEX_HASH NFS_HASH("RIGHT_ANALOG_UP")
// RIGHT_ANALOG_UP_SWEDISH
#define FE_RANALOG_UP_SWEDISH_TEX_HASH NFS_HASH("RIGHT_ANALOG_UP_SWEDISH")
// RIGHT_ANALOG_UP_FRENCH
#define FE_RANALOG_UP_FRENCH_TEX_HASH NFS_HASH("RIGHT_ANALOG_UP_FRENCH")
// RIGHT_ANALOG_DOWN -- will read GAMEACTION_SHIFTDOWN (but since it's based on PS2 this MIGHT have to be GAMEACTION_BRAKE)
#define FE_RANALOG_DOWN_TEX_HASH NFS_HASH("RIGHT_ANALOG_DOWN")
// RIGHT_ANALOG_DOWN_SWEDISH
#define FE_RANALOG_DOWN_SWEDISH_TEX_HASH NFS_HASH("RIGHT_ANALOG_DOWN_SWEDISH")
// RIGHT_ANALOG_DOWN_FRENCH
#define FE_RANALOG_DOWN_FRENCH_TEX_HASH NFS_HASH("RIGHT_ANALOG_DOWN_FRENCH")
// LEFT_ANALOG
#define FE_LANALOG_TEX_HASH NFS_HASH("LEFT_ANALOG")
// LEFT_ANALOG_UP
#define FE_LANALOG_UP_TEX_HASH NFS_HASH("LEFT_ANALOG_UP")
// LEFT_ANALOG_UP_SWEDISH
#define FE_LANALOG_UP_SWEDISH_TEX_HASH NFS_HASH("LEFT_ANALOG_UP_SWEDISH")
// LEFT_ANALOG_UP_FRENCH
#define FE_LANALOG_UP_FRENCH_TEX_HASH NFS_HASH("LEFT_ANALOG_UP_FRENCH")
// LEFT_ANALOG_DOWN
#define FE_LANALOG_DOWN_TEX_HASH NFS_HASH("LEFT_ANALOG_DOWN")
// LEFT_ANALOG_DOWN_SWEDISH
#define FE_LANALOG_DOWN_SWEDISH_TEX_HASH NFS_HASH("LEFT_ANALOG_DOWN_SWEDISH")
// LEFT_ANALOG_DOWN_FRENCH
#define FE_LANALOG_DOWN_FRENCH_TEX_HASH NFS_HASH("LEFT_ANALOG_DOWN_FRENCH")
// DPAD -- will only read FRONTENDACTION_UP
#define FE_DPAD_TEX_HASH NFS_HASH("DPAD")
// DPAD_UPDOWN -- will only read FRONTENDACTION_UP
#define FE_DPAD_UPDOWN_TEX_HASH NFS_HASH("DPAD_UPDOWN")
// DPAD_LEFTRIGHT -- will only read FRONTENDACTION_LEFT
#define FE_DPAD_LEFTRIGHT_TEX_HASH NFS_HASH("DPAD_LEFTRIGHT")
// DPAD_UP -- will read FRONTENDACTION_UP
#define FE_DPAD_UP_TEX_HASH NFS_HASH("DPAD_UP")
// DPAD_DOWN -- will read FRONTENDACTION_DOWN
#define FE_DPAD_DOWN_TEX_HASH NFS_HASH("DPAD_DOWN")
// DPAD_LEFT -- will read FRONTENDACTION_LEFT
#define FE_DPAD_LEFT_TEX_HASH NFS_HASH("DPAD_LEFT")
// DPAD_RIGHT -- will read FRONTENDACTION_RIGHT
#define FE_DPAD_RIGHT_TEX_HASH NFS_HASH("DPAD_RIGHT")

enum FEButtonTex {
  FE_NULL_TEX,
  FE_ACCEPT_TEX,
  FE_CANCEL_TEX,
  FE_BUTTON4_TEX,
  FE_BUTTON5_TEX,
  FE_LTRIGGER_TEX,
  FE_RTRIGGER_TEX,
  FE_BUTTON0_TEX,
  FE_START_TEX,
  FE_SELECT_TEX,
  FE_BUTTON1_TEX,
  FE_BUTTON2_TEX,
  FE_BUTTON3_TEX,
  FE_RANALOG_TEX,
  FE_RANALOG_UP_TEX,
  FE_RANALOG_UP_SWEDISH_TEX,
  FE_RANALOG_UP_FRENCH_TEX,
  FE_RANALOG_DOWN_TEX,
  FE_RANALOG_DOWN_SWEDISH_TEX,
  FE_RANALOG_DOWN_FRENCH_TEX,
  FE_LANALOG_TEX,
  FE_LANALOG_UP_TEX,
  FE_LANALOG_UP_SWEDISH_TEX,
  FE_LANALOG_UP_FRENCH_TEX,
  FE_LANALOG_DOWN_TEX,
  FE_LANALOG_DOWN_SWEDISH_TEX,
  FE_LANALOG_DOWN_FRENCH_TEX,
  FE_DPAD_TEX,
  FE_DPAD_UPDOWN_TEX,
  FE_DPAD_LEFTRIGHT_TEX,
  FE_DPAD_UP_TEX,
  FE_DPAD_DOWN_TEX,
  FE_DPAD_LEFT_TEX,
  FE_DPAD_RIGHT_TEX,
  FE_TEX_HASH_COUNT
};

unsigned int FE_DefaultButtonTexHashes[FE_TEX_HASH_COUNT] = {
    0,
    FE_ACCEPT_TEX_HASH,
    FE_CANCEL_TEX_HASH,
    FE_BUTTON4_TEX_HASH,
    FE_BUTTON5_TEX_HASH,
    FE_LTRIGGER_TEX_HASH,
    FE_RTRIGGER_TEX_HASH,
    FE_BUTTON0_TEX_HASH,
    FE_START_TEX_HASH,
    FE_SELECT_TEX_HASH,
    FE_BUTTON1_TEX_HASH,
    FE_BUTTON2_TEX_HASH,
    FE_BUTTON3_TEX_HASH,
    FE_RANALOG_TEX_HASH,
    FE_RANALOG_UP_TEX_HASH,
    FE_RANALOG_UP_SWEDISH_TEX_HASH,
    FE_RANALOG_UP_FRENCH_TEX_HASH,
    FE_RANALOG_DOWN_TEX_HASH,
    FE_RANALOG_DOWN_SWEDISH_TEX_HASH,
    FE_RANALOG_DOWN_FRENCH_TEX_HASH,
    FE_LANALOG_TEX_HASH,
    FE_LANALOG_UP_TEX_HASH,
    FE_LANALOG_UP_SWEDISH_TEX_HASH,
    FE_LANALOG_UP_FRENCH_TEX_HASH,
    FE_LANALOG_DOWN_TEX_HASH,
    FE_LANALOG_DOWN_SWEDISH_TEX_HASH,
    FE_LANALOG_DOWN_FRENCH_TEX_HASH,
    FE_DPAD_TEX_HASH,
    FE_DPAD_UPDOWN_TEX_HASH,
    FE_DPAD_LEFTRIGHT_TEX_HASH,
    FE_DPAD_UP_TEX_HASH,
    FE_DPAD_DOWN_TEX_HASH,
    FE_DPAD_LEFT_TEX_HASH,
    FE_DPAD_RIGHT_TEX_HASH,
};

bool cFEng_IsPackageInControl_Fast(unsigned int pkg_name_hash);
int (*FE_String_Printf)(void* FEObject, const char* fmt, ...)        = (int (*)(void*, const char*, ...))FE_STRING_PRINTF_ADDRESS;
void* (*FEngFindObject_Title)(char* pkg_name, unsigned int obj_hash) = (void* (*)(char*, unsigned int))FENG_FINDOBJECT_ADDR;

char* SplashPkgName = "Splash.fng";

void SetTitleScreenText() {
  int   obj_hash   = 0xC4DF3FF2;
  char* pkg_name   = SplashPkgName;
  char* splash_txt = FE_SPLASH_TEXT_PC;

  if (bConsoleFEng) {
    switch (ControllerIconMode) {
      case CONTROLLERICON_PS3:
        splash_txt = FE_SPLASH_TEXT_PS3;
        break;
      case CONTROLLERICON_XB360MW:
      case CONTROLLERICON_XBOX360:
        splash_txt = FE_SPLASH_TEXT_XBOX360;
        break;
      case CONTROLLERICON_PS4:
        splash_txt = FE_SPLASH_TEXT_PS4;
        break;
      case CONTROLLERICON_SWITCH:
        splash_txt = FE_SPLASH_TEXT_SWITCH;
        break;
      case CONTROLLERICON_XBOXONE:
      default:
        splash_txt = FE_SPLASH_TEXT_XBOX;
        break;
    }
  }

  FE_String_Printf(FEngFindObject_Title(pkg_name, obj_hash), splash_txt);
}

void (*InitProfileSettings)() = (void (*)())0x006A56C0;
#endif

#ifdef GAME_UC
#define NO_FENG
#define NO_QUIT_BUTTON

#define GAMEFLOWMANAGER_STATUS_ADDR     0x00DA57B8
#define UTL_ILIST_CONSTRUCTOR_ADDR      0x005F6A00
#define PLAYER_ILISTABLE_ADDR           0x00DE99DC
#define PLAYER_GETHUD_VTABLE_OFFSET     0x20
#define FENGHUD_ISVISIBLE_VTABLE_OFFSET 0x28

// no cFEng stuff because FEng is used only for HUD in Undercover

#define GAME_HWND_ADDR 0x00DF1DF8

#define GLOBAL_FASTMEM_ADDR  0x00DA5320
#define FASTMEM_ALLOC_ADDR   0x005F6340
#define INIT_LIST_ALLOC_SIZE 0x28

#define WNDPROC_POINTER_ADDR 0x75630B

#define DINPUT_KILL_ADDR 0x0069A5B1

#define DEADZONE_FLOAT_POINTER_ADDR 0x69C8C7
float smallfloat = 0.000001;
#define SMALL_FLOAT_ADDR &smallfloat

#define INPUTMAPPING_CONSTRUCTOR_CALL_ADDR   0x0069D370
#define INPUTDEVICE_FACTORY_INITIALIZER_ADDR 0xBC221D

#define FENGHUD_JOYHANDLER_JMP_FROM 0x005CDA4A
#define FENGHUD_JOYHANDLER_JMP_TO   0x005CD81D

void (*InitProfileSettings)() = (void (*)())0x006774C0;

#define DEBUGWORLDCAMERAMOVER_UPDATE_VT_ADDR 0x00BE4448
unsigned int DebugWorldCameraMover_Update_Addr = 0x004E4040;

#define DEBUGWORLDCAMERAMOVER_CAVE1_ENTRY    0x004E4269
#define DEBUGWORLDCAMERAMOVER_CAVE1_EXIT     0x004E429E
#define DEBUGWORLDCAMERAMOVER_CAVE1_FULLEXIT 0x4E4460

#define DEBUGWORLDCAMERAMOVER_CAVE2_ENTRY 0x004E4305
#define DEBUGWORLDCAMERAMOVER_CAVE2_EXIT  0x004E4313

#define DEBUGWORLDCAMERAMOVER_CONSTRUCTOR_ADDR      0x004CEB60
#define DEBUGWORLDCAMERAMOVER_CONSTRUCTOR_HOOK_ADDR 0x004DE03B

#define DEBUGWORLDCAMERAMOVER_DESTRUCTOR_ADDR      0x004CECC0
#define DEBUGWORLDCAMERAMOVER_DESTRUCTOR_HOOK_ADDR 0x004D7853

#define DEBUGWORLDCAMERAMOVER_XSPEED_OFFSET 0xD0
#define DEBUGWORLDCAMERAMOVER_YSPEED_OFFSET 0xD2

#define DEBUGWORLDCAMERAMOVER_MMX
#endif

#ifdef GAME_WORLD
unsigned int MainBase;

#define NO_FENG
#define NO_PROFILE_SETTINGS
#define NO_QUIT_BUTTON

#define GAMEFLOWMANAGER_STATUS_ADDR (0x00CFC730 + MainBase)
#define UTL_ILIST_CONSTRUCTOR_ADDR  (0x00753940 + MainBase)

#define GAME_HWND_ADDR (0x00D06504 + MainBase)

// memory allocators work differently in World
// #define GLOBAL_FASTMEM_ADDR 0xC8178C + MainBase
// #define FASTMEM_ALLOC_ADDR 0x0060BA70 + MainBase
#define MANAGED_ALLOCATOR_ADDR (0x006D4660 + MainBase)
#define INIT_LIST_ALLOC_SIZE   0x28

#define DINPUT_KILL_ADDR (0x0075C16B + MainBase)

#define DEADZONE_FLOAT_POINTER_ADDR (0x75E26D + MainBase)
float smallfloat = 0.000001;
#define SMALL_FLOAT_ADDR &smallfloat

#define INPUTMAPPING_CONSTRUCTOR_CALL_ADDR   (0x0075EB43 + MainBase)
#define INPUTDEVICE_FACTORY_INITIALIZER_ADDR (0xB10F9D + MainBase)

#define DEBUGWORLDCAMERAMOVER_UPDATE_VT_ADDR (0x00BD3DC0 + MainBase)
unsigned int DebugWorldCameraMover_Update_Addr;
unsigned int DebugWorldCameraMover_Update_VT_Addr;

#define DEBUGWORLDCAMERAMOVER_CAVE1_ENTRY    (0x007DBC92 + MainBase)
#define DEBUGWORLDCAMERAMOVER_CAVE1_EXIT     (0x007DBCF1 + MainBase)
#define DEBUGWORLDCAMERAMOVER_CAVE1_FULLEXIT (0x7DBE1F + MainBase)

#define DEBUGWORLDCAMERAMOVER_CAVE2_ENTRY (0x007DBD07 + MainBase)
#define DEBUGWORLDCAMERAMOVER_CAVE2_EXIT  (0x007DBD1B + MainBase)

#define DEBUGWORLDCAMERAMOVER_CONSTRUCTOR_ADDR      (0x007D0080 + MainBase)
#define DEBUGWORLDCAMERAMOVER_CONSTRUCTOR_HOOK_ADDR (0x007DE398 + MainBase)

#define DEBUGWORLDCAMERAMOVER_DESTRUCTOR_ADDR      (0x007D0250 + MainBase)
#define DEBUGWORLDCAMERAMOVER_DESTRUCTOR_HOOK_ADDR (0x007D7516 + MainBase)

#define DEBUGWORLDCAMERAMOVER_XSPEED_OFFSET 0xA4
#define DEBUGWORLDCAMERAMOVER_YSPEED_OFFSET 0xA6

#define DEBUGWORLDCAMERAMOVER_STACK_OFFSET  0x1C
#define DEBUGWORLDCAMERAMOVER_STACK_OFFSET2 0x1C

#define DEBUGWORLDCAMERAMOVER_MMX
#endif

#endif  // XTENDEDINPUT_DEFINITIONS_H
Below is a reference of available buttons for assignment (following standard XInput/Virtual-Key definitions, but slightly extended)
You absolutely *must* assign them with strings and not in any other way (e.g. decimal/hex numbers).

For each event you may assign only 1 button.

Inline comments are NOT allowed in the configuration file for string reads! So this includes all button assignments!

=== BASICS ===

Format is as follows:

[Events]
EVENT = BUTTON_NAME
...

[EventsKB]
EVENT = KEYBOARD_KEY_NAME
...

=== XINPUT ===

It should be pretty self-explanatory.
List of available buttons:

XINPUT_GAMEPAD_DPAD_UP       
XINPUT_GAMEPAD_DPAD_DOWN     
XINPUT_GAMEPAD_DPAD_LEFT     
XINPUT_GAMEPAD_DPAD_RIGHT    
XINPUT_GAMEPAD_START         
XINPUT_GAMEPAD_BACK          
XINPUT_GAMEPAD_LEFT_THUMB    
XINPUT_GAMEPAD_RIGHT_THUMB   
XINPUT_GAMEPAD_LEFT_SHOULDER (or XINPUT_GAMEPAD_LB)
XINPUT_GAMEPAD_RIGHT_SHOULDER (or XINPUT_GAMEPAD_RB)
XINPUT_GAMEPAD_A             
XINPUT_GAMEPAD_B             
XINPUT_GAMEPAD_X             
XINPUT_GAMEPAD_Y             
XINPUT_GAMEPAD_LT     
XINPUT_GAMEPAD_RT     
XINPUT_GAMEPAD_LS_X   
XINPUT_GAMEPAD_LS_Y  
XINPUT_GAMEPAD_RS_X  
XINPUT_GAMEPAD_RS_Y   
XINPUT_GAMEPAD_LS_UP
XINPUT_GAMEPAD_LS_DOWN	
XINPUT_GAMEPAD_LS_LEFT
XINPUT_GAMEPAD_LS_RIGHT
XINPUT_GAMEPAD_RS_UP
XINPUT_GAMEPAD_RS_DOWN
XINPUT_GAMEPAD_RS_LEFT
XINPUT_GAMEPAD_RS_RIGHT

=== KEYBOARD ===

Keyboard assignments should follow the Virtual-Key Code definitions (you can find them here: https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes)
Type their definition names in directly (e.g. if you want to assign the Return key, just use VK_RETURN directly in the config file)
For single letter assignments, type the letter in as-is (e.g. if you want to assign the 'G' key, just use G)

=== Event list ===

Below is a full list of available events in the game which you may assign. 
They trigger at various points in the game (whenever their handlers are generated), but not all of them actually work.
Reminder that some events are assigned only to the SECOND controller, such as debug camera actions.

NOTE: quitting with Q key is hardcoded due to the way it's coded in the game

NULL_ACTION
GAMEACTION_STEERLEFT
GAMEACTION_STEERRIGHT
GAMEACTION_TURNLEFT
GAMEACTION_TURNRIGHT
GAMEACTION_GAS
GAMEACTION_BRAKE
GAMEACTION_HANDBRAKE
GAMEACTION_GAMEBREAKER 
GAMEACTION_SHIFTUP 
GAMEACTION_SHIFTDOWN 
GAMEACTION_RESET 
GAMEACTION_POWERUP_0 
GAMEACTION_POWERUP_1 
GAMEACTION_POWERUP_2 
GAMEACTION_POWERUP_3 
GAMEACTION_OPTIONS_SHORTCUT 
GAMEACTION_PROFILE_SHORTCUT 
GAMEACTION_SAFEHOUSE_SHORTCUT 
GAMEACTION_WORLDMAP_SHORTCUT 
GAMEACTION_FRIENDSLIST_SHORTCUT 
GAMEACTION_POWERUPCHANGEPAGE_UP 
GAMEACTION_POWERUPCHANGEPAGE_DOWN 
GAMEACTION_HELP_SHORTCUT 
GAMEACTION_CHAT_SHORTCUT 
GAMEACTION_FORWARD 
GAMEACTION_BACK 
GAMEACTION_JUMP 
GAMEACTION_DEBUGHUMAN1 
GAMEACTION_DEBUGHUMAN2 
GAMEACTION_DEBUGHUMAN3 
GAMEACTION_DEBUGHUMAN4 
GAMEACTION_CLUTCH 
GAMEACTION_TOGGLE_AUTODRIVE 
GAMEACTION_TOGGLE_COPLIGHTS 
GAMEACTION_TOGGLE_AUDIO 
GAMEACTION_HYDRAULICS_BACK 
GAMEACTION_HYDRAULICS_FRONT 
GAMEACTION_HYDRAULICS_LEFT 
GAMEACTION_HYDRAULICS_RIGHT 
CAMERAACTION_CHANGE 
CAMERAACTION_DEBUG 
CAMERAACTION_ENABLE_ICE 
CAMERAACTION_LOOKBACK 
CAMERAACTION_PULLBACK 
CAMERAACTION_TOGGLE 
CAMERAACTION_ROT_UP 
CAMERAACTION_ROT_DOWN 
CAMERAACTION_ROT_LEFT 
CAMERAACTION_ROT_RIGHT 
CAMERAACTION_MOVE_UP 
CAMERAACTION_MOVE_DOWN 
CAMERAACTION_MOVE_LEFT 
CAMERAACTION_MOVE_RIGHT 
CAMERAACTION_MOVE_FORWARD 
CAMERAACTION_MOVE_BACKWARD 
CAMERAACTION_FOV_SMALLER 
CAMERAACTION_FOV_LARGER 
CAMERAACTION_CRANE_DOWN 
CAMERAACTION_CRANE_UP 
CAMERAACTION_DOLLY_LEFT 
CAMERAACTION_DOLLY_RIGHT 
CAMERAACTION_TURBOSPEED 
CAMERAACTION_CHANGE_CAR 
FRONTENDACTION_UP 
FRONTENDACTION_DOWN 
FRONTENDACTION_LEFT 
FRONTENDACTION_RIGHT 

The following 4 actions are exclusive to gamepad input (they're not real action IDs):
FRONTENDACTION_UP_ALT
FRONTENDACTION_DOWN_ALT
FRONTENDACTION_LEFT_ALT
FRONTENDACTION_RIGHT_ALT

FRONTENDACTION_RUP 
FRONTENDACTION_RDOWN 
FRONTENDACTION_RLEFT 
FRONTENDACTION_RRIGHT 
FRONTENDACTION_ACCEPT 
FRONTENDACTION_CANCEL 
FRONTENDACTION_CANCEL_ALT 
FRONTENDACTION_START 
FRONTENDACTION_BUTTON0 
FRONTENDACTION_BUTTON1 
FRONTENDACTION_BUTTON2 
FRONTENDACTION_BUTTON3 
FRONTENDACTION_BUTTON4 
FRONTENDACTION_BUTTON5 
FRONTENDACTION_LTRIGGER 
FRONTENDACTION_RTRIGGER 
FRONTENDACTION_PGUP 
FRONTENDACTION_PGDOWN 
HUDACTION_PAUSEREQUEST 
HUDACTION_ENGAGE_EVENT 
HUDACTION_PAD_LEFT 
HUDACTION_PAD_DOWN 
HUDACTION_PAD_RIGHT 
HUDACTION_SKIPNIS 
HUDACTION_SCREENSHOT 
HUDACTION_NEXTSONG 
HUDACTION_VOIPACTIVATION 
HUDACTION_VOIPDEACTIVATION 
VOIPACTION_PUSHTOTALK 
DEBUGACTION_MOVE_UP 
DEBUGACTION_MOVE_DOWN
DEBUGACTION_MOVE_LEFT
DEBUGACTION_MOVE_RIGHT
DEBUGACTION_MOVE_FORWARD
DEBUGACTION_MOVE_BACK
DEBUGACTION_LOOK_UP
DEBUGACTION_LOOK_DOWN
DEBUGACTION_LOOK_LEFT
DEBUGACTION_LOOK_RIGHT
DEBUGACTION_TURBO
DEBUGACTION_SUPER_TURBO
DEBUGACTION_CAMERA_SAVE
DEBUGACTION_CAMERA_LOAD
DEBUGACTION_DEBUGDRAW_DRAWTICK_DEC
DEBUGACTION_DEBUGDRAW_DRAWTICK_INC
DEBUGACTION_DEBUGDRAW_DRAWTICKRANGE_DEC
DEBUGACTION_DEBUGDRAW_DRAWTICKRANGE_INC
DEBUGACTION_DROPCAR
DEBUGACTION_LOCKTOCAR
DEBUGACTION_TOGGLESIMSTEP
DEBUGACTION_SIMSTEP
DEBUGACTION_TOGGLESIMPAUSE
DEBUGACTION_SCREENSHOT
DEBUGACTION_STOPRECORDPATH
DEBUGACTION_TOGGLECARCOLOUR
DEBUGACTION_TOGGLEDEMOCAMERAS
DEBUGACTION_TOGGLEMENU
ACTION_EXITAPPLICATION
ACTION_PLUGGED
ACTION_UNPLUGGED
ACTION_FLUSH
